Metadata-Version: 2.1
Name: seven-api
Version: 2.0.0
Summary: A Python wrapper for seven.io.
Home-page: https://github.com/seven-io/python-client
Author: seven communications GmbH & Co. KG
Author-email: "seven communications GmbH & Co. KG" <support@seven.io>
License: MIT
Project-URL: Homepage, https://www.seven.io
Project-URL: Repository, https://github.com/seven-io/python-client.git
Keywords: cnam,hlr,mnp,sms,text2voice,tts
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Build Tools
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3 :: Only
Requires-Python: >=3.4, <4
Description-Content-Type: text/markdown
License-File: LICENSE

![](https://www.sms77.io/wp-content/uploads/2019/07/sms77-Logo-400x79.png "sms77 Logo")

# Python API Client

## Installation

Make sure you have [Python 3](https://www.python.org/downloads/) installed.

```shell script
pip3 install sms77api
```

### Methods

```python
def __init__(self, api_key: str, sent_with: str = 'Python'):
    pass


def analytics(self, params={}):
    pass


def balance(self, api_key: str = None):
    pass


def contacts(self, action: ContactsAction, params: dict = {}):
    pass


def hooks(self, action: HooksAction, params: dict = {}):
    pass


def journal(self, typ: JournalType, params: dict = {}):
    pass


def lookup(self, typ: LookupType, number: str, json: bool = False):
    pass


def pricing(self, format_: PricingFormat = PricingFormat.CSV, country: str = None):
    pass


def sms(self, to: str, text: str, params: dict = {}):
    pass


def status(self, msg_id: int):
    pass


def subaccounts(self, action: SubaccountsAction, params: dict = {}):
    pass


def validate_for_voice(self, number: str, callback: str = None):
    pass


def voice(self, to: str, text: str, params: dict = {}):
    pass
```

### Examples

#### Retrieve balance associated with given API key

```python
from seven_api.SevenApi import SevenApi

client = SevenApi("InsertYourSuperSecretApiKeyFromSms77")
print(client.balance())
```

#### Send an SMS and return a detailed JSON response

```python
from seven_api.SevenApi import SevenApi
import os

client = SevenApi(os.environ.get('SMS77_API_KEY', 'FallbackValueIfMissing'))
print(client.sms('+491771783130', 'Hi friend!', {'json': True}))
```

#### Support

Need help? Feel free to [contact us](https://www.sms77.io/en/company/contact/).

###### License

[![MIT](https://img.shields.io/badge/License-MIT-teal.svg)](LICENSE)
